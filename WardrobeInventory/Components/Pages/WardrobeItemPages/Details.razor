@page "/details"
@using Microsoft.EntityFrameworkCore
@using WardrobeInventory.Models
@inject IDbContextFactory<WardrobeInventory.Data.WardrobeInventoryContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>WardrobeItem</h2>
    <hr />
    @if (wardrobeitem is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@wardrobeitem.Name</dd>
            <dt class="col-sm-2">Category</dt>
            <dd class="col-sm-10">@wardrobeitem.Category</dd>
            <dt class="col-sm-2">Brand</dt>
            <dd class="col-sm-10">@wardrobeitem.Brand</dd>
            <dt class="col-sm-2">Color</dt>
            <dd class="col-sm-10">@wardrobeitem.Color</dd>
            <dt class="col-sm-2">Material</dt>
            <dd class="col-sm-10">@wardrobeitem.Material</dd>
            <dt class="col-sm-2">Size</dt>
            <dd class="col-sm-10">@wardrobeitem.Size</dd>
            <dt class="col-sm-2">Condition</dt>
            <dd class="col-sm-10">@wardrobeitem.Condition</dd>
            <dt class="col-sm-2">StorageLocation</dt>
            <dd class="col-sm-10">@wardrobeitem.StorageLocation</dd>
            <dt class="col-sm-2">Image</dt>
            <dd class="col-sm-10">
                <img src="@GetImageSource(wardrobeitem.Image)">
            </dd>
            <dt class="col-sm-2">Price</dt>
            <dd class="col-sm-10">@wardrobeitem.Price</dd>
        </dl>
        <div>
            <a href="@($"/edit?id={wardrobeitem.Id}")">Edit</a> |
            <a href="@($"/")">Back to List</a>
        </div>
    }
</div>

@code {
    private WardrobeItem? wardrobeitem;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        wardrobeitem = await context.WardrobeItem.FirstOrDefaultAsync(m => m.Id == Id);

        if (wardrobeitem is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
    
    private string GetImageSource(byte[]? imageData)
    {
        if (imageData != null && imageData.Length > 0)
        {
            string base64String = Convert.ToBase64String(imageData);
            return $"data:image/png;base64,{base64String}";
        }
        return "";
    }
}

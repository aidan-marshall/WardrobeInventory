@page "/"

@using WardrobeInventory.Models
@using WardrobeInventory.Components.Reusable
@using WardrobeInventory.Services
@inject NavigationManager Navigation
@inject IWardrobeService WardrobeService
@rendermode InteractiveServer

<PageTitle>Your Wardrobe Items</PageTitle>

<AppButton OnButtonClicked="@CreateNew" Content="New Wardrobe Item"></AppButton>


<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 p-4">
    @if (_items == null || !_items.Any())
    {
        <p>No items found!</p>
    }
    else
    {
        @foreach (var item in _items)
        {
            <Card ImageBytes="@item.Image" Description="@item.Name" Category="@item.Category.ToString()"
                  Color="@item.Color"
                  OnEditClicked="() => EditItem(item)"
                  OnDeleteClicked="() => ConfirmDelete(item)"/>
        }
    }
</div>

@code {
    private List<WardrobeItem>? _items;

    private void EditItem(WardrobeItem item)
    {
        Navigation.NavigateTo($"/edit?id={item.Id}");
    }

    private void CreateNew()
    {
        Navigation.NavigateTo("/create");
    }

    private void ConfirmDelete(WardrobeItem item)
    {
        Navigation.NavigateTo($"/delete?id={item.Id}");
    }
    
    protected override async Task OnInitializedAsync()
    {
        _items = await WardrobeService.GetWardrobeItemsAsync();
    }
}


@page "/"

@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using WardrobeInventory.Models
@using WardrobeInventory.Data
@implements IAsyncDisposable
@inject IDbContextFactory<WardrobeInventory.Data.WardrobeInventoryContext> DbFactory
@rendermode InteractiveServer

<PageTitle>Wardrobe</PageTitle>

<h1>Wardrobe</h1>

<p>
    <a href="/create">Create New</a>
</p>

 <QuickGrid Class="table" Items="context.WardrobeItem"> 
    <PropertyColumn Property="wardrobeitem => wardrobeitem.Name" />
    <PropertyColumn Property="wardrobeitem => wardrobeitem.Category" /> 
    <PropertyColumn Property="wardrobeitem => wardrobeitem.Brand" />
    <PropertyColumn Property="wardrobeitem => wardrobeitem.Color" />
    <PropertyColumn Property="wardrobeitem => wardrobeitem.Material" />
    <PropertyColumn Property="wardrobeitem => wardrobeitem.Size" />
    <PropertyColumn Property="wardrobeitem => wardrobeitem.Condition" />
    <PropertyColumn Property="wardrobeitem => wardrobeitem.StorageLocation" />
    <TemplateColumn Context="wardrobeitem" Title="Image">
        @((wardrobeitem.Image == null || wardrobeitem.Image.Length == 0) ? "No" : "Yes")
    </TemplateColumn>
    <PropertyColumn Property="wardrobeitem => wardrobeitem.Price" />

    <TemplateColumn Context="wardrobeitem">
        <a href="@($"/edit?id={wardrobeitem.Id}")">Edit</a> |
        <a href="@($"/details?id={wardrobeitem.Id}")">Details</a> |
        <a href="@($"/delete?id={wardrobeitem.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>



@code {
    private WardrobeInventoryContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();


}

